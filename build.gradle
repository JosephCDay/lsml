buildscript {
	repositories {
      maven {
        url "https://plugins.gradle.org/m2/"
      }
  	}
}

plugins {
	id "application"
	id "java"
	id "jacoco"
	
	id "com.github.spotbugs" version "1.6.9"
	id "edu.sc.seis.launch4j" version "2.4.4"
	id "net.ltgt.apt-eclipse" version "0.20"
    id "com.dorongold.task-tree" version "1.3.1"
}

repositories {
	jcenter()
}

allprojects {
	sourceCompatibility = 8.0
	targetCompatibility = 8.0
}

/* ----------------------------------------------------------------------------
 * General project configuration
 * --------------------------------------------------------------------------*/
applicationName = 'Li Song Mechlab'
archivesBaseName = 'lsml'
mainClassName = 'org.lisoft.lsml.view_fx.LiSongMechLab'
version = project.getProperty('version')
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            // These cause too much noise right now
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

/* ----------------------------------------------------------------------------
 * Dependencies
 * --------------------------------------------------------------------------*/
dependencies {
	compile 'com.thoughtworks.xstream:xstream:1.4.11.1',
			'net.java.dev.jna:jna:5.2.0',
			"com.google.dagger:dagger:2.21"
			
  	annotationProcessor "com.google.dagger:dagger-compiler:2.21"

	testCompile 'junit:junit:4.12+', 
				'org.mockito:mockito-core:2.23.4', 
				'pl.pragmatists:JUnitParams:1.1.1'
}

/* ----------------------------------------------------------------------------
 * Tests, Verification and Reports
 * --------------------------------------------------------------------------*/
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled false
        html.enabled true
    }
    excludeFilter = file("$rootProject.projectDir/findbugsExclude.xml")
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

test{
    jacoco{
        excludes = ['**/view_fx/**',
                    '**/database/gamedata/**',
                    '**/database/gamedata/MwoDataReader**',
                    '**/view_headless/**']
    }
}
          
check.dependsOn jacocoTestReport

/* ----------------------------------------------------------------------------
 * Release Management
 * --------------------------------------------------------------------------*/
createExe{
	jreMinVersion = "1.8.0_172"
	mainClassName = project.mainClassName
	dontWrapJar = true
	outputDir = "../installer/"
	icon = '../installer/icon.ico'
	jar = 'lsml.jar'
	manifest = '../installer/lsml.manifest'
}

task wixCandle64(type: Exec) {
	workingDir 'installer'
	executable 'candle'
	args '-dg_64bit="yes"', '-dg_version=' + version, '"*.wxs"'
    dependsOn = ["createExe"]
}

task wixLight64(type: Exec) {
	workingDir 'installer'
	executable 'light'
	args '-ext', 'WixUIExtension', '"*.wixobj"', '-out', 'LSML_Setup-'+version+'_64bit.msi'
    dependsOn = ["wixCandle64"]
}

task wixCandle32(type: Exec) {
	workingDir 'installer'
	executable 'candle'
	args '-dg_64bit="no"', '-dg_version=' + version, '"*.wxs"'
    dependsOn = ["createExe"]
}

task wixLight32(type: Exec) {
	workingDir 'installer'
	executable 'light'
	args '-ext', 'WixUIExtension', '"*.wixobj"', '-out', 'LSML_Setup-'+version+'_32bit.msi'
    dependsOn = ["wixCandle32"]
}

compileJava.mustRunAfter clean

task release {
    dependsOn = ["clean", "check", "wixLight64", "wixLight32"]
}

jar {	
	archiveName="lsml.jar"
	destinationDir = file('installer/')
	
	// Always make fat jar
	from { 
		configurations.compile.collect { 
			it.isDirectory() ? it : zipTree(it) 
		}
	}
	
	// Change the version string in the database to match the released version
	eachFile { copyDetails ->
        if (copyDetails.path == 'database.xml') {
            filter { line ->
                line.replace('(develop)', version)
            }
        }
    }

	manifest {
		attributes(	'Main-Class': mainClassName, 
					'Implementation-Title': 'Li Song Mechlab', 
					'Implementation-Version' : version)
	}
}
